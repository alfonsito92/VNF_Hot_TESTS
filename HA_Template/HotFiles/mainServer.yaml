heat_template_version: 2016-04-08

description: >
  Simple Server definition
  Created by Altran

parameters:

  index:
    type: number
    description: Index into the lists of VM names

  vMnames:
    type: comma_delimited_list
    description: List of server names

  image:
    type: string
    description: Image for vMnames

  flavor:
    type: string
    description: The server flavor

  serverGroup:
    type: string
    description: Server Group used by servers

  securityGroup:
    type: string
    description: Security Group

  privateNetwork:
    type: string
    description: Private network to attach servers

  ipList:
    type: comma_delimited_list
    description: list of ips

  volumeType: 
    type: string
    description: Kind of volume to be Created

  volumeSize:
    type: number
    description: Size of volume to be created (GB)

  aZone: 
    type: string
    description: Avaiability zone

  key:
    type: string
    description: key

resources:

  instancePort:
    type: OS::Neutron::Port
    properties:
      name: { list_join: ['-', [{get_param: [vMnames, {get_param: index}]}, "private"]]}
      network: { get_param: privateNetwork }
      security_groups:
        - { get_param: securityGroup }
      fixed_ips:
        - ip_address: {get_param: [ipList, {get_param: index}]}

  Server:
    type: OS::Nova::Server
    properties:
      name: { get_param: [vMnames, {get_param: index}]}
      image: { get_param: image }
      flavor: { get_param: flavor }
      config_drive: true
      networks: 
        - port: {get_resource: instancePort}
      availability_zone: {get_param: aZone}
      key_name: {get_param: key}
      scheduler_hints: { group: { get_param: serverGroup } }

  #New volume creation
  # cinder_volume:
  #   type: OS::Cinder::Volume
  #   properties:
  #     name: BSV
  #     size: { get_param: volume_size }
  #     volume_type: { get_param: volume_type }

  #Volume attachment
  # volume_attachment:
  #   type: OS::Cinder::VolumeAttachment
  #   properties:
  #     volume_id: { get_resource: cinder_volume }
  #     instance_uuid: { get_resource: VM }
  #     mountpoint: /dev/vdb

  # #Port creation
  # port_instance1:
  #   type: OS::Neutron::Port
  #   depends_on: HASecurityGroup
  #   properties:
  #     security_groups:
  #       - { get_resource: HASecurityGroup }
  #     network: { get_resource: neutron_net }
  #     name: vmvnic
  #     fixed_ips:
  #       - ip_address: { get_param: ip_vm }

  # #Virtual Machines Creation 
  # vServer:
  #   type: OS::Nova::Server
  #   properties:
  #     name: { get_param: vm_name }
  #     image: { get_param: image_id }
  #     flavor: { get_resource: HAflavor }
  #     networks:
  #       - port: {get_resource: port_instance1}
  #     availability_zone: { get_param: aZone }
  #     key_name: { get_resource: HAKey }